:: TeacherPunishments structure [pos_1800_2092]
\
	<!--<punishment functions>-->\
<<set $TeacherPunishments={
	selectPunishment: function (penalties, type, bodyMod) {
		var pp = $player.perversion;
		var prio = 0;
		var sumChance = 0;
		var possiblePun = [];
		var minVal = 0; var maxVal = 1;
		var severity = Math.min(($player.tasks.punSeverity + penalties) / 2, $player.tasks.punSeverity);
		for (var i = 0; i lt Object.keys($punishments).length; i++) {
			var p = $punishments[Object.keys($punishments)[i]];
			var bR = p.baseReq;
			if (!p.extraReq()) {
				continue;
			}
			if (!p.active || (p.timeStart + p.cooldown gt $time.day) || (!(p.punType & type)) || prio gt p.priority || (!bodyMod && (p.punType & $punTypes.FailToPayBodyMod)) || (bR.teacher[minVal] gt pp.teacher) || (bR.teacher[maxVal] lt pp.teacher) || (bR.guardian[minVal] gt pp.guardian) || (bR.guardian[maxVal] lt pp.guardian) || (bR.therapist[minVal] gt pp.therapist) || (bR.therapist[maxVal] lt pp.therapist) || (bR.penalties[minVal] gt severity) || (bR.penalties[maxVal] lt severity)) {
				continue;
			}
			if (p.priority gt prio) { sumChance = 0; possiblePun = []; prio = p.priority; }
			possiblePun.push(i);
			sumChance += p.chance;
		}
		$player.testArray=possiblePun;
		if (possiblePun.length == 0) { return false; }
		if (possiblePun.length gt 2) {
			possiblePun = possiblePun.filter(function (pun) { pun != $player.tasks.lastPunName });
		}
		var rnd = $random.getIntInclusive(1, sumChance);
		for (var i = 0; i lt possiblePun.length; i++) {
			var p = $punishments[Object.keys($punishments)[possiblePun[i]]];
			sumChance -= p.chance;
			if (sumChance lte rnd) {
				if (p.onlyOnce) { p.active = false; }
				p.start();
				p.progress += 1;
				$player.tasks.lastPunName = possiblePun[i];
				p.timeStart = $time.day;
				return p;
			}
		}
	}
}>>
<<set $player.testArray = []>>
<<set $punTypes = {
	FailToPay: 1,
	FailToPayBodyMod: 2,
	Friday: 4,
	Willing: 8,
	All: 15,
	}
>>
<!--</punishment functions>-->\
<<set $punishments = {
	<!--<punishment template>-->\
	punName: {
		punType:	$punTypes.FailToPay + $punTypes.FailToPayBodyMod + $punTypes.Friday,
		description:'Teachers description of what you are to do',
		text:		'What happens during the punishment unlessed handled in passage',
		passage:	'Name of passage that implements punishment',
		active:		false,
		onlyOnce:	false,
		chance:		10,
		priority:	0,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [0, 10] },
		extraReq:	function () {
					return true;	// or return $kink.XXX or $kink.YYY;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	7,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</punishment template>-->\
	
	<!--<pun nailPolishPenalty>-->\
	nailPolishPenalty: {
		punType:	$punTypes.FailToPay,
		description:'Teachers description of what you are to do',
		text:		'Teacher paints PCs nails',
		passage:	'nailPolishPenalty',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	10,
		baseReq:	{ teacher: [0, 2], guardian: [0, 10], therapist: [0, 10], penalties: [0, 3] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun nailPolishPenalty>-->\
	<!--<pun takingKeyFromChastity>-->\
	takingKeyFromChastity: {
		punType:	$punTypes.FailToPay,
		description:'Teachers description of what you are to do',
		text:		'Teacher takes the key from PC chastity cage',
		passage:	'takingKeyFromChastity',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	10,
		baseReq:	{ teacher: [0, 2], guardian: [0, 10], therapist: [0, 10], penalties: [0, 10] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun takingKeyFromChastity>-->\
	<!--<pun wearDressToSchool>-->\
	wearDressToSchool: {
		punType:	$punTypes.FailToPay,
		description:'Teachers description of what you are to do',
		text:		'Teacher takes the key from PC chastity cage',
		passage:	'wearDressToSchool',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	10,
		baseReq:	{ teacher: [3, 3], guardian: [0, 10], therapist: [0, 10], penalties: [0, 10] },
		extraReq:	function () {
					return ($tasksTeacher.wearDressToSchool.status eq 0);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun wearDressToSchool>-->\
	
	<!--<pun punStool>-->\
	punStool: {
		punType:	$punTypes.Friday + $punTypes.Willing,
		description:'Teachers description of what you are to do',
		text:		'Teacher makes PC undress and sits on him',
		passage:	'punStool',
		active:		true,
		onlyOnce:	false,
		chance:		10,
		priority:	0,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [0, 4] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun punStool>-->\
	<!--<pun punishmentSpanking>-->\
	punishmentSpanking: {
		punType:	$punTypes.Friday + $punTypes.Willing,
		description:'Teachers description of what you are to do',
		text:		'Teacher spanks PC',
		passage:	'punishmentSpanking',
		active:		true,
		onlyOnce:	false,
		chance:		1,
		priority:	0,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [0, 10] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun punishmentSpanking>-->\
	<!--<pun feetLicking>-->\
	feetLicking: {
		punType:	$punTypes.Friday + $punTypes.Willing,
		description:'Teachers description of what you are to do',
		text:		'Teacher puts collar on PC, pet play, boot worship, spitting',
		passage:	'feetLicking',
		active:		true,
		onlyOnce:	false,
		chance:		10,
		priority:	0,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [2, 6] },
		extraReq:	function () {
					return $kink.footFetish;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun feetLicking>-->\
	<!--<pun LickBoots>-->\
	punishmentLickBoots: {
		punType:	$punTypes.Friday + $punTypes.Willing,
		description:'Teachers description of what you are to do',
		text:		'Teacher puts collar on PC, pet play, boot worship, spitting',
		passage:	'punishmentLickBoots',
		active:		true,
		onlyOnce:	false,
		chance:		10,
		priority:	0,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [2, 6] },
		extraReq:	function () {
					return $kink.shoeBoot;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun LickBoots>-->\
	<!--<pun readingStory>-->\
	readingStory: {
		punType:	$punTypes.Friday + $punTypes.Willing,
		description:'Teachers description of what you are to do',
		text:		'Teacher makes PC read erotical story while being plugged',
		passage:	'readingStory',
		active:		true,
		onlyOnce:	false,
		chance:		10,
		priority:	0,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [2, 6] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun readingStory>-->\

	<!--<pun sitOnDildo>-->\
	sitOnDildo: {
		punType:	$punTypes.Friday + $punTypes.Willing,
		description:'Teachers description of what you are to do',
		text:		'Teacher apply her most severe punishment',
		passage:	'sitOnDildo',
		active:		true,
		onlyOnce:	false,
		chance:		20,
		priority:	0,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [7, 10] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,
		start:		function () {},
		end:		function () {},
	},
	<!--</pun sitOnDildo>-->\
	
	<!--<pun PenisShrinking>-->\
	PenisShrinking: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo penis shrinking procedure',
		passage:	'PenisShrinking',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	5,
		baseReq:	{ teacher: [0, 10], guardian: [0, 10], therapist: [0, 10], penalties: [0, 10] },
		extraReq:	function () {
					return $kink.penisShrink && (not $player.owns($items.PenisShrinking));	// or return $kink.XXX or $kink.YYY;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PenisShrinking>-->\
	<!--<pun Waxing>-->\
	Waxing: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo waxing procedure',
		passage:	'Waxing',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 5], guardian: [0, 10], therapist: [0, 10], penalties: [0, 3] },
		extraReq:	function () {
					return (not $player.isHairless()) and (not $player.isWaxed());
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun Waxing>-->\
	<!--<pun LaserHairRemoval>-->\
	LaserHairRemoval: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo LaserHairRemoval procedure',
		passage:	'LaserHairRemoval',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 7], guardian: [0, 10], therapist: [0, 10], penalties: [2, 6] },
		extraReq:	function () {
					return not $player.owns($items.LaserHairRemoval);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun LaserHairRemoval>-->\
	<!--<pun Haircut>-->\
	Haircut: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo Haircut procedure',
		passage:	'Haircut',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 6], guardian: [0, 10], therapist: [0, 10], penalties: [0, 4] },
		extraReq:	function () {
					return not $player.haveHaircut();
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun Haircut>-->\
	<!--<pun PiercingEars>-->\
	PiercingEars: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PiercingEars procedure',
		passage:	'PiercingEars',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 7], guardian: [0, 10], therapist: [0, 10], penalties: [0, 4] },
		extraReq:	function () {
					return (not $player.owns($items.PiercingEars));
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PiercingEars>-->\

	<!--<pun AssEnhancing>-->\
	AssEnhancing: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo AssEnhancing procedure',
		passage:	'AssEnhancing',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 6], guardian: [0, 10], therapist: [0, 10], penalties: [0, 6] },
		extraReq:	function () {
					return ($player.scoreAss() lte 0) and (not $player.flags.teacherNoticeAssEnhancing);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun AssEnhancing>-->\
	<!--<pun LipsEnhancing>-->\
	LipsEnhancing: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo LipsEnhancing procedure',
		passage:	'LipsEnhancing',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 6], guardian: [0, 10], therapist: [0, 10], penalties: [0, 6] },
		extraReq:	function () {
					return ($player.scoreLips() lte 0) and (not $player.flags.teacherNoticeLipsEnhancing);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun LipsEnhancing>-->\

	<!--<pun AssEnhancingXL>-->\
	AssEnhancingXL: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo AssEnhancingXL procedure',
		passage:	'AssEnhancingXL',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [5, 10], guardian: [0, 10], therapist: [0, 10], penalties: [4, 8] },
		extraReq:	function () {
					return ($player.scoreAss() lte 1) and (not $player.flags.teacherNoticeAssEnhancingXL);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun AssEnhancingXL>-->\
	<!--<pun LipsEnhancingXL>-->\
	LipsEnhancingXL: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo LipsEnhancingXL procedure',
		passage:	'LipsEnhancingXL',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [5, 10], guardian: [0, 10], therapist: [0, 10], penalties: [4, 8] },
		extraReq:	function () {
					return ($player.scoreLips() lte 1) and (not $player.flags.teacherNoticeLipsEnhancingXL);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun LipsEnhancingXL>-->\

	<!--<pun SubtleMakeup>-->\
	SubtleMakeup: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo SubtleMakeup procedure',
		passage:	'SubtleMakeup',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 6], guardian: [0, 10], therapist: [0, 10], penalties: [0, 6] },
		extraReq:	function () {
					return (not $player.haveMakeup());
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun SubtleMakeup>-->\
	<!--<pun NormalMakeup>-->\
	NormalMakeup: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo NormalMakeup procedure',
		passage:	'NormalMakeup',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [3, 6] },
		extraReq:	function () {
					return ($player.scoreMakeup() lte 1) and (not $player.flags.teacherNoticeNormalMakeup);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun NormalMakeup>-->\
	<!--<pun HeavyMakeup>-->\
	HeavyMakeup: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo HeavyMakeup procedure',
		passage:	'HeavyMakeup',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [5, 10] },
		extraReq:	function () {
					return ($player.scoreMakeup() lte 3) and (not $player.flags.teacherNoticeHeavyMakeup) and ($player.semiPermMakeup lte 3);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun HeavyMakeup>-->\
	<!--<pun PermanentHeavyMakeup>-->\
	PermanentHeavyMakeup: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PermanentHeavyMakeup procedure',
		passage:	'PermanentHeavyMakeup',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	2,
		baseReq:	{ teacher: [8, 10], guardian: [0, 10], therapist: [0, 10], penalties: [7, 10] },
		extraReq:	function () {
					return $kink.tattoo and ($player.permMakeup lte 3);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PermanentHeavyMakeup>-->\
	
	<!--<pun Manicure>-->\
	Manicure: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo Manicure procedure',
		passage:	'Manicure',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [0, 6] },
		extraReq:	function () {
					return (not $player.owns($items.Manicure)) and (not $player.owns($items.GarishManicure)) and (not $player.flags.teacherNoticeManicure);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun Manicure>-->\
	<!--<pun GarishManicure>-->\
	GarishManicure: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo GarishManicure procedure',
		passage:	'GarishManicure',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [6, 10] },
		extraReq:	function () {
					return (not $player.owns($items.GarishManicure)) and (not $player.flags.teacherNoticeManicurePerm);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun GarishManicure>-->\
		
	<!--<pun breastImplantsA>-->\
	breastImplantsA: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo breastImplantsA procedure',
		passage:	'breastImplantsA',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [0, 5] },
		extraReq:	function () {
					return (not $player.flags.teacherNoticeBreastsA) and (not $player.haveBoobs());
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun breastImplantsA>-->\
	<!--<pun breastImplantsB>-->\
	breastImplantsB: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo breastImplantsA procedure',
		passage:	'breastImplantsB',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 7], guardian: [0, 10], therapist: [0, 10], penalties: [0, 6] },
		extraReq:	function () {
					return (not $player.flags.teacherNoticeBreastsB) and (not $player.haveBplus());
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun breastImplantsB>-->\
	<!--<pun breastImplantsC>-->\
	breastImplantsC: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo breastImplantsC procedure',
		passage:	'breastImplantsC',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [5, 8], guardian: [0, 10], therapist: [0, 10], penalties: [2, 7] },
		extraReq:	function () {
					return (not $player.flags.teacherNoticeBreastsC) and (not $player.haveCplus());
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun breastImplantsC>-->\
	<!--<pun breastImplantsDD>-->\
	breastImplantsDD: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo breastImplantsDD procedure',
		passage:	'breastImplantsDD',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [3, 8] },
		extraReq:	function () {
					return (not $player.owns($items.breastImplantsDD)) and (not $player.flags.teacherNoticeBreastsDD);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun breastImplantsDD>-->\

	<!--<pun softeningFacial>-->\
	softeningFacial: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo softeningFacial procedure',
		passage:	'softeningFacial',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [2, 6] },
		extraReq:	function () {
					return (not $player.owns($items.softeningFacial)) and (not $player.owns($items.surgeryFacial));
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun softeningFacial>-->\
	<!--<pun surgeryFacial>-->\
	surgeryFacial: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo surgeryFacial procedure',
		passage:	'surgeryFacial',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [5, 8], guardian: [0, 10], therapist: [0, 10], penalties: [3, 7] },
		extraReq:	function () {
					return (not $player.owns($items.surgeryFacial));
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun surgeryFacial>-->\
	<!--<pun nosePiggy>-->\
	nosePiggy: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo nosePiggy procedure',
		passage:	'nosePiggy',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [3, 7] },
		extraReq:	function () {
					return (not $player.owns($items.nosePiggy)) and (not $player.owns($items.noseClassic)) and (not $player.owns($items.noseButton)) and (not $player.flags.teacherNoticeNosePiggy);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun nosePiggy>-->\

	<!--<pun tattooBunny>-->\
	tattooBunny: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooBunny procedure',
		passage:	'tattooBunny',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 6], guardian: [0, 10], therapist: [0, 10], penalties: [2, 6] },
		extraReq:	function () {
					return $kink.tattoo and (not $player.owns($items.tattooBunny));
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooBunny>-->\
	<!--<pun tattooButterfly>-->\
	tattooButterfly: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooButterfly procedure',
		passage:	'tattooButterfly',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [3, 7] },
		extraReq:	function () {
					return (not $player.owns($items.tattooButterfly)) and $kink.tattoo;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooButterfly>-->\
	<!--<pun tattooStockings>-->\
	tattooStockings: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooStockings procedure',
		passage:	'tattooStockings',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [4, 6], guardian: [0, 10], therapist: [0, 10], penalties: [4, 7] },
		extraReq:	function () {
					return (not $player.owns($items.tattooStockings)) and $kink.tattoo;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooStockings>-->\
	<!--<pun tattooStupidWhore>-->\
	tattooStupidWhore: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooStupidWhore procedure',
		passage:	'tattooStupidWhore',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [6, 10] },
		extraReq:	function () {
					return (not $player.owns($items.tattooStupidWhore)) and $kink.tattoo;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooStupidWhore>-->\
	<!--<pun tattooSlut>-->\
	tattooSlut: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooSlut procedure',
		passage:	'tattooSlut',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [6, 9] },
		extraReq:	function () {
					return (not $player.owns($items.tattooSlut)) and $kink.tattoo;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooSlut>-->\
	<!--<pun tattooSissy>-->\
	tattooSissy: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooSissy procedure',
		passage:	'tattooSissy',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [6, 9] },
		extraReq:	function () {
					return (not $player.owns($items.tattooSissy)) and $kink.tattoo;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooSissy>-->\
	<!--<pun tattooHeart>-->\
	tattooHeart: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo tattooHeart procedure',
		passage:	'tattooHeart',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [6, 9] },
		extraReq:	function () {
					return (not $player.owns($items.tattooHeart)) and $kink.tattoo;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun tattooHeart>-->\

	<!--<pun PiercingTongue>-->\
	PiercingTongue: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PiercingTongue procedure',
		passage:	'PiercingTongue',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [5, 10], guardian: [0, 10], therapist: [0, 10], penalties: [4, 8] },
		extraReq:	function () {
					return (not $player.owns($items.PiercingTongue)) and $kink.piercing;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PiercingTongue>-->\
	<!--<pun PiercingNipples>-->\
	PiercingNipples: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PiercingNipples procedure',
		passage:	'PiercingNipples',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [5, 10], guardian: [0, 10], therapist: [0, 10], penalties: [2, 8] },
		extraReq:	function () {
					return (not $player.owns($items.PiercingNipples)) and $kink.piercing;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PiercingNipples>-->\
	<!--<pun PiercingLips>-->\
	PiercingLips: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PiercingLips procedure',
		passage:	'PiercingLips',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [2, 8] },
		extraReq:	function () {
					return (not $player.owns($items.PiercingLips)) and $kink.piercing;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PiercingLips>-->\
	<!--<pun PiercingBelly>-->\
	PiercingBelly: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PiercingBelly procedure',
		passage:	'PiercingBelly',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [3, 8] },
		extraReq:	function () {
					return (not $player.owns($items.PiercingBelly)) and $kink.piercing;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PiercingBelly>-->\
	<!--<pun PiercingNose>-->\
	PiercingNose: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo PiercingNose procedure',
		passage:	'PiercingNose',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 10], guardian: [0, 10], therapist: [0, 10], penalties: [3, 8] },
		extraReq:	function () {
					return (not $player.owns($items.PiercingNose)) and $kink.piercing;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun PiercingNose>-->\

	<!--<pun analSmoothing1>-->\
	analSmoothing1: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo analSmoothing1 procedure',
		passage:	'analSmoothing1',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [0, 5], guardian: [0, 10], therapist: [0, 10], penalties: [2, 8] },
		extraReq:	function () {
					return ($player.semiPermAnal lte 0) and ($player.scoreAnalSmooth() lte 0);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun analSmoothing1>-->\
	<!--<pun analSmoothing2>-->\
	analSmoothing2: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo analSmoothing2 procedure',
		passage:	'analSmoothing2',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [6, 7], guardian: [0, 10], therapist: [0, 10], penalties: [3, 8] },
		extraReq:	function () {
					return ($player.semiPermAnal lte 1) and ($player.scoreAnalSmooth() lte 1);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun analSmoothing2>-->\
	<!--<pun analSmoothing3>-->\
	analSmoothing3: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo analSmoothing3 procedure',
		passage:	'analSmoothing3',
		active:		true,
		onlyOnce:	false,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [8, 10], guardian: [0, 10], therapist: [0, 10], penalties: [4, 9] },
		extraReq:	function () {
					return true;
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	},
	<!--</pun analSmoothing3>-->\
	<!--<pun analSmoothingPermanent>-->\
	analSmoothingPermanent: {
		punType:	$punTypes.FailToPayBodyMod,
		description:'Teachers description of what you are to do',
		text:		'Teacher forces PC to undergo analSmoothingPermanent procedure',
		passage:	'analSmoothingPermanent',
		active:		true,
		onlyOnce:	true,
		chance:		10,
		priority:	1,
		baseReq:	{ teacher: [10, 10], guardian: [0, 10], therapist: [0, 10], penalties: [6, 10] },
		extraReq:	function () {
					return ($player.permAnal lte 2) and ($player.scoreAnalSmooth() gte 3);
				},
		progress:	0,
		timeStart:	0,
		cooldown:	0,	// Cooldown in days since last given
		start:		function () {},
		end:		function () {},
	}
	<!--</pun analSmoothingPermanent>-->\
}
>>\

<<goto [[Setup logic]]>>


